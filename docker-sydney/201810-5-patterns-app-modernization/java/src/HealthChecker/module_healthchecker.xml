<?xml version="1.0" encoding="UTF-8"?>
<project name="module_healthchecker" default="compile.module.healthchecker">
  <dirname property="module.healthchecker.basedir" file="${ant.file.module_healthchecker}"/>
  
  <property name="module.jdk.home.healthchecker" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.healthchecker" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.healthchecker" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.healthchecker" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="healthchecker.output.dir" value="${module.healthchecker.basedir}/out/production/HealthChecker"/>
  <property name="healthchecker.testoutput.dir" value="${module.healthchecker.basedir}/out/test/HealthChecker"/>
  
  <path id="healthchecker.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="healthchecker.module.production.classpath">
    <path refid="${module.jdk.classpath.healthchecker}"/>
    <pathelement location="${basedir}/lib/commons-codec-1.10.jar"/>
    <pathelement location="${basedir}/lib/commons-logging-1.2.jar"/>
    <pathelement location="${basedir}/lib/fluent-hc-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-cache-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-win-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpcore-4.4.9.jar"/>
    <pathelement location="${basedir}/lib/httpmime-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/jna-4.4.0.jar"/>
    <pathelement location="${basedir}/lib/jna-platform-4.4.0.jar"/>
    <pathelement location="${basedir}/lib/commons-lang3-3.7.jar"/>
  </path>
  
  <path id="healthchecker.runtime.production.module.classpath">
    <pathelement location="${healthchecker.output.dir}"/>
    <pathelement location="${basedir}/lib/commons-codec-1.10.jar"/>
    <pathelement location="${basedir}/lib/commons-logging-1.2.jar"/>
    <pathelement location="${basedir}/lib/fluent-hc-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-cache-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-win-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpcore-4.4.9.jar"/>
    <pathelement location="${basedir}/lib/httpmime-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/jna-4.4.0.jar"/>
    <pathelement location="${basedir}/lib/jna-platform-4.4.0.jar"/>
    <pathelement location="${basedir}/lib/commons-lang3-3.7.jar"/>
  </path>
  
  <path id="healthchecker.module.classpath">
    <path refid="${module.jdk.classpath.healthchecker}"/>
    <pathelement location="${healthchecker.output.dir}"/>
    <pathelement location="${basedir}/lib/commons-codec-1.10.jar"/>
    <pathelement location="${basedir}/lib/commons-logging-1.2.jar"/>
    <pathelement location="${basedir}/lib/fluent-hc-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-cache-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-win-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpcore-4.4.9.jar"/>
    <pathelement location="${basedir}/lib/httpmime-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/jna-4.4.0.jar"/>
    <pathelement location="${basedir}/lib/jna-platform-4.4.0.jar"/>
    <pathelement location="${basedir}/lib/commons-lang3-3.7.jar"/>
  </path>
  
  <path id="healthchecker.runtime.module.classpath">
    <pathelement location="${healthchecker.testoutput.dir}"/>
    <pathelement location="${healthchecker.output.dir}"/>
    <pathelement location="${basedir}/lib/commons-codec-1.10.jar"/>
    <pathelement location="${basedir}/lib/commons-logging-1.2.jar"/>
    <pathelement location="${basedir}/lib/fluent-hc-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-cache-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpclient-win-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/httpcore-4.4.9.jar"/>
    <pathelement location="${basedir}/lib/httpmime-4.5.5.jar"/>
    <pathelement location="${basedir}/lib/jna-4.4.0.jar"/>
    <pathelement location="${basedir}/lib/jna-platform-4.4.0.jar"/>
    <pathelement location="${basedir}/lib/commons-lang3-3.7.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.healthchecker">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.healthchecker">
    <patternset refid="excluded.from.module.healthchecker"/>
  </patternset>
  
  <path id="healthchecker.module.sourcepath">
    <dirset dir="${module.healthchecker.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.healthchecker" depends="compile.module.healthchecker.production,compile.module.healthchecker.tests" description="Compile module HealthChecker"/>
  
  <target name="compile.module.healthchecker.production" depends="register.custom.compilers" description="Compile module HealthChecker; production classes">
    <mkdir dir="${healthchecker.output.dir}"/>
    <javac2 destdir="${healthchecker.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.healthchecker}/javac">
      <compilerarg line="${compiler.args.healthchecker}"/>
      <bootclasspath refid="healthchecker.module.bootclasspath"/>
      <classpath refid="healthchecker.module.production.classpath"/>
      <src refid="healthchecker.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.healthchecker"/>
    </javac2>
    
    <copy todir="${healthchecker.output.dir}">
      <fileset dir="${module.healthchecker.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.healthchecker.tests" depends="register.custom.compilers,compile.module.healthchecker.production" description="compile module HealthChecker; test classes" unless="skip.tests"/>
  
  <target name="clean.module.healthchecker" description="cleanup module">
    <delete dir="${healthchecker.output.dir}"/>
    <delete dir="${healthchecker.testoutput.dir}"/>
  </target>
</project>