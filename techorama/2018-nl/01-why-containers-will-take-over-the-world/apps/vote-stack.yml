version: "3.2"

services:

  redis:
    image: redis:4-alpine
    networks:
      - frontend
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.platform.os == linux
      restart_policy:
        condition: on-failure

  db:
    image: postgres:9.4
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    deploy:
      placement:
        constraints: 
        - node.role == manager

  vote:
    image: dockersamples/examplevotingapp_vote:before
    ports:
      - 5000:80
    networks:
      - frontend
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.platform.os == linux
      restart_policy:
        condition: on-failure

  result:
    image: dockersamples/examplevotingapp_result:before
    ports:
      - 5001:80
    networks:
      - backend
    depends_on:
      - db
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.platform.os == linux
      restart_policy:
        condition: on-failure

  worker:
    image: dockersamples/examplevotingapp_worker
    networks:
      - frontend
      - backend
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
        - node.platform.os == linux

networks:
  frontend:
  backend:

volumes:
  db-data: